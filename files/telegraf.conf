[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = false

<%text>###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################</%text>

[[outputs.influxdb]]
  urls = ["${telegraf.get('influxdb_url', 'http://127.0.0.1:8086')}"] # required
  database = "telegraf"
  retention_policy = ""
  write_consistency = "any"
  timeout = "5s"
  username = "${telegraf.get('username', 'telegraf')}"
  password = "${telegraf['password']}"
  user_agent = "telegraf"

<%text>###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################</%text>

% if telegraf.get('collect_cpu', True):
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = true
  report_active = true
% endif

% if telegraf.get('collect_disk', True):
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs"]

[[inputs.diskio]]
% endif

% if telegraf.get('collect_kernel', True):
[[inputs.kernel]]
% endif

% if telegraf.get('collect_mem', True):
[[inputs.mem]]
% endif

[[inputs.processes]]

% if telegraf.get('collect_swap', False):
[[inputs.swap]]
% endif

% if telegraf.get('collect_system', True):
[[inputs.system]]
% endif

% if telegraf.get('collect_interrups', True):
[[inputs.interrupts]]
% endif

[[inputs.conntrack]]
  dirs = ["/proc/sys/net/netfilter"]
  files = ["nf_conntrack_count",
  "nf_conntrack_max",
  "nf_conntrack_expect_max"]

[[inputs.internal]]
  collect_memstats = true

% if telegraf.get('collect_vmstat', True):
[[inputs.kernel_vmstat]]
% endif

% if telegraf.get('collect_sysctl_fs', True):
[[inputs.linux_sysctl_fs]]
% endif

[[inputs.net]]

[[inputs.netstat]]
